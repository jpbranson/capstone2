library(shiny)
library(readr)
library(mice)
#library(VIM)
library(ggmap)
library(ggplot2)
library(tidyverse)
library(rpart)
library(class)
library(gmodels)
library(FNN)
################# ADD 4 parameters like earlier script . previously we have 16 now we have only 4
args = commandArgs(trailingOnly = TRUE)
outputfile="output.json"
msa_selected <- 'Abilene-TX'
wtalent <- .3
wconnect <- .25
wcost <- .3
wquality <- .15
print("msa_selected is as below")
print("Arg 1")
print(msa_selected)
print("Arg 2")
print(wtalent)
print("Arg 3")
print(wconnect)
print("Arg 4")
print(wcost)
print("Arg 5")
print(wquality)
data_model <- read_csv("scoretable_final.csv")
#dim(dat)
tc <- data <- read_csv("data_score.csv")
data_model <- merge(tc, data_model, by = 'MSA')
data_model <- data_model[-c(1:6,8:131)]
data_model <- data_model[-c(2)]
#view(data_model)
#SECOND MODELUse default weights to train algorithm
wtalent <- .3
wconnect <- .25
wcost <- .3
wquality <- .15
data_model$talent_score <- data_model$talent_score*wtalent
data_model$connect_score <- data_model$connect_score*wconnect
data_model$cost_score <- data_model$cost_score*wcost
data_model$quality_score <- data_model$quality_score*wquality
prc_train <- data_model[1:356,]
prc_test <- data_model[5:356,]
prc_train_labels <- data_model[1:356, 1]
prc_test_labels <- data_model[5:356, 1]
#refit
model2 <- knn(train = prc_train, test = prc_train, cl = prc_train_labels, k=11)
